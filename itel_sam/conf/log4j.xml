<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="true">  


    <!--输出方式：输出到控制台-->  
    <appender name="file" class="org.apache.log4j.RollingFileAppender">  
    <!-- 
     设置通道名称和输出方式，其中输出方式appender有5种,分别为
      org.apache.log4j.RollingFileAppender    
     org.apache.log4j.ConsoleAppender (控制台)
     org.apache.log4j.FileAppender (文件)   
     org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件)   
     org.apache.log4j.WriterAppender (将日志信息以流格式发送到指定地方)
     -->  
    <param name="File" value="${baseframe.root}logs/itel.log"/>  
	<param name="MaxFileSize" value="8MB"/> 
	<param name="MaxBackupIndex" value="256"/>
	<param name="Append" value="true"/>
	<param name="encoding" value="UTF-8"/>
	<param name="Threshold" value="INFO"/>
    <!--
      Threshold是个全局的过滤器，他将把低于所设置的level的信息过滤不显示出来
     -->  

    <!-- 设置日志输出的格式-->  
    <layout class="org.apache.log4j.PatternLayout">  
    
    <!-- 
      参数都以%开始后面不同的参数代表不同的格式化信息：   
       %c  输出所属类的全名，可在修改为 %d{Num} ,Num类名输出的范围
       如："org.apache.elathen.ClassName",%C{2}将输出elathen.ClassName    
     
      %d  输出日志时间其格式为 %d{yyyy-MM-dd HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss}   

      %l  输出日志事件发生位置，包括类目名、发生线程，在代码中的行数  
 
       %n  换行符   
       
       %m  输出代码指定信息，如info(“message”),输出message   
        
      %p  输出优先级，即 FATAL ,ERROR 等   
         
       %r  输出从启动到显示该log信息所耗费的毫秒数   
        
       %t  输出产生该日志事件的线程名-->  

      <!-- The default pattern: Date Priority [Category] Message\n -->
      <param name="ConversionPattern" value="%d{yyyy-MM-dd hh:mm:ss}:%p %t %c - %m%n"/>  
    </layout>  
  </appender>  

          
    <root>  
        <!-- root 整体设置过滤优先级，如果appender 没有设置filter或Threshold 默认采用该级别，定义的logger不在其中（即不会被过滤掉）。 -->  
        <priority value="DEBUG" />  
        <appender-ref ref="file" />  
    </root>      
</log4j:configuration> 