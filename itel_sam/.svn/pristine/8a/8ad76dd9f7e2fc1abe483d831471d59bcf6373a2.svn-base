package com.itel.tools;

import cn.jpush.api.JPushClient;
import cn.jpush.api.push.PushResult;
import cn.jpush.api.push.model.Message;
import cn.jpush.api.push.model.Platform;
import cn.jpush.api.push.model.PushPayload;
import cn.jpush.api.push.model.audience.Audience;
import cn.jpush.api.push.model.notification.Notification;

/**
 * 极光推送公共类
 * 
 * @author yangxuan
 * 
 */
public class JPushUtils {
	
	/**
	 * applicationContext.xml注入client,以便通过配置文件修改推送app
	 */
	private JPushClient client;
	 
	 
	public JPushClient getClient() {
		return client;
	}
	public void setClient(JPushClient client) {
		this.client = client;
	}
	
	
	public void sendMsg(PushPayload pushPayload){
		PushResult result = client.sendPush(pushPayload);
		
	}
	
	public void sendMsgByPerson(String regId,String msg ){
		 Audience audience = Audience.registrationId(regId);
		 PushPayload.Builder p = PushPayload.newBuilder();
		 p.setAudience(audience);
		 p.setPlatform(Platform.android());
		 Notification notification = Notification.alert(msg);
		 p.setNotification(notification);
		 PushPayload pp =  p.build();
		 PushResult result = client.sendPush(pp);
		 System.out.println(result.isResultOK());
	}
	
	/**
	 * windows Phone ,IOS,Android 推送消息
	 * @param str
	 */
	public void sendMessageByAll(String str){
		Audience audience = Audience.all();
		PushPayload.Builder p = PushPayload.newBuilder();
		p.setAudience(audience);
		p.setPlatform(Platform.all());
		Message message = Message.content(str);
		p.setMessage(message);
		PushPayload pp =  p.build();
		client.sendPush(pp);
	}
	
	/**
	 * Android 推送消息
	 * @param str
	 */
	public void sendMessageByAllToAndroid(String str){
		Audience audience = Audience.all();
		PushPayload.Builder p = PushPayload.newBuilder();
		p.setAudience(audience);
		p.setPlatform(Platform.android());
		Message message = Message.content(str);
		p.setMessage(message);
		PushPayload pp =  p.build();
		client.sendPush(pp);
	}
	
	/**
	 * IOS 推送消息
	 * @param str
	 */
	public void sendMessageByAllToIOS(String str){
		Audience audience = Audience.all();
		PushPayload.Builder p = PushPayload.newBuilder();
		p.setAudience(audience);
		p.setPlatform(Platform.ios());
		Message message = Message.content(str);
		p.setMessage(message);
		PushPayload pp =  p.build();
		client.sendPush(pp);
	}
	
	
	public void sendMessageByAlias(String alias,String msg){
//		Audience audience = Audience.alias("88888888");
		Audience audience = Audience.alias(alias);
		PushPayload.Builder p = PushPayload.newBuilder();
		p.setAudience(audience);
		p.setPlatform(Platform.all());
		Message message = Message.content(msg);
		p.setMessage(message);
		PushPayload pp =  p.build();
		client.sendPush(pp);
	}
	

}
