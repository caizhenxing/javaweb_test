package com.itel.web.controller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import oracle.net.aso.g;

import org.apache.log4j.Logger;
import org.hibernate.HibernateException;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.itel.dao.utils.QueryCondition;
import com.itel.data.GridResult;
import com.itel.domain.SamAuthor;
import com.itel.domain.SamDevice;
import com.itel.service.ISamDeviceService;
import com.itel.tools.ControllerSupport;
import com.sencha.gxt.widget.core.client.form.DualListField.Mode;
import com.sun.org.apache.regexp.internal.recompile;

@Controller
@RequestMapping("/samDeviceController")
public class SamDeviceController extends ControllerSupport<SamDevice> {
	
	private final static Logger log = Logger.getLogger(SamDeviceController.class);
	
	@Autowired
	private ISamDeviceService iSamDeviceService;

	/**
	 * 添加摄像头-配置设备
	 * 
	 * @param entity
	 * @return
	 */
	@RequestMapping(value = "/addDevice", method = RequestMethod.POST)
	public ModelAndView addDevice(SamDevice entity) {
		GridResult gridResult = iSamDeviceService.saveSamDevice(entity);
		return new ModelAndView("jsonView", gridResult);
		
	}
	
	
	/**
	 * 设备解除绑定
	 * @return
	 */
	@RequestMapping(value="/deleteDevice",method=RequestMethod.POST)
	public ModelAndView deleteDevice(SamDevice samDevice){
		GridResult gridResult = iSamDeviceService.deleteSamDevice(samDevice);
		return new ModelAndView("jsonView", gridResult);
	}
	
	

	/**
	 * 添加摄像头-添加已有设备
	 * 
	 * @param entity
	 * @return
	 */
	@RequestMapping(value = "/addExistDevice", method = RequestMethod.POST)
	public ModelAndView addExitsDevice(SamDevice entity) {
		GridResult gridResult = iSamDeviceService.saveExitsDevice(entity);
		return new ModelAndView("jsonView", gridResult);
	}

	/**
	 * 我的设备列表
	 * 
	 * @param queryCondition
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "/getOwerDevice", method = RequestMethod.GET)
	public ModelAndView getOwerDevice(QueryCondition queryCondition) {
		GridResult<SamDevice> gridResult = iSamDeviceService.getOwerDevice(queryCondition);
		return new ModelAndView("jsonView", gridResult);	
	}

	/**
	 * 我的监控列表修改设备别名
	 * 
	 * @return
	 */
	@RequestMapping(value = "/updateTitle", method = RequestMethod.POST)
	public ModelAndView updateTitle(SamDevice samDevice) {
		GridResult gridResult = iSamDeviceService.updateTitle(samDevice);
		return new ModelAndView("jsonView",gridResult);
	}

	/**
	 * 设置摄像头公开
	 * 
	 * @return
	 */
	@RequestMapping(value = "/setDeviceShare", method = RequestMethod.POST)
	public ModelAndView setDeviceShare(SamDevice samDevice) {
		GridResult gridResult = iSamDeviceService.updateDeviceShare(samDevice);
		return new ModelAndView("jsonView",gridResult);
	}
	
	/**
	 * 设置允许所有人绑定
	 * @param samDevice
	 * @return
	 */
	@RequestMapping(value="/setAllUserBind",method=RequestMethod.POST)
	public ModelAndView setAllUserBind(SamDevice samDevice){
	GridResult gridResult = iSamDeviceService.updateAllUserBind(samDevice);
	return new ModelAndView("jsonView",gridResult);
	}

}
