<?xml version="1.0" encoding="UTF-8"?>
	<ehcache>
		<!-- 默认磁盘缓存位置，当内存不足时发在这里  -->
		<diskStore path="java.io.tmpdir" />
		<!-- 
		maxElementsInMemory="10000" // Cache中最多允许保存的数据对象的数量
		external=“false” //缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期 
		timeToIdleSeconds="3600"  //缓存数据钝化时间(当缓存闲置n秒后销毁)  
		timeToLiveSeconds="3600"  //缓存数据的生存时间(当缓存存活n秒后销毁)
		overflowToDisk="false"  //内存不足时，是否启用磁盘缓存  
		diskExpiryThreadIntervalSeconds="120"  指定专门用于清除过期对象的监听线程的轮询时间(磁盘失效线程运行时间间隔，默认是120秒)
		memoryStoreEvictionPolicy="LRU" //内存不足时数据对象的清除策略
		
		ehcache中缓存的3种清空策略：
		1. FIFO(first in first out):先进先出。
		2. LFU( Less Frequently Used):一直以来最少被使用的。如上面所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。
		3. LRU(Least Recently Used):最近最少使用的，缓存的元素有一个时间戳，
		        当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
		 -->
		<defaultCache 
			maxElementsInMemory="10000" 
			eternal="false"
			timeToIdleSeconds="3600" 
			timeToLiveSeconds="3600" 
			overflowToDisk="true"
			diskPersistent="false" 
			diskExpiryThreadIntervalSeconds="120"
			memoryStoreEvictionPolicy="LRU" />
			
		<!-- 
			配置需要作缓存的model, 如果不配置，那么就采用的是默认的缓存技术(defaultCache中的配置), 
			如果配置了就采用他自己的配置
		 -->
		<cache name="com.sun.model.demo.TSysDemo"
			maxElementsInMemory="10000" eternal="false" overflowToDisk="false"
			timeToIdleSeconds="3600" timeToLiveSeconds="3600" />
	</ehcache>