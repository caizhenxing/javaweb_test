package com.itel.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import oracle.net.aso.g;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.servlet.ModelAndView;

import com.itel.dao.ISamAuthorDao;
import com.itel.data.GridResult;
import com.itel.domain.SamAuthor;
import com.itel.service.ISamAuthorService;

@Service
public class ISamAuthorServiceImpl implements ISamAuthorService {
	private final Logger log = Logger.getLogger(ISamAuthorServiceImpl.class);
	@Autowired
	private ISamAuthorDao iSamAuthorDao;

	/**
	 * 通过设备号获取授权信息
	 */
	@Override
	public GridResult<SamAuthor> getAuthorListByPitel(SamAuthor samAuthor) {
		samAuthor.setActive("Y");
		List<SamAuthor> list = iSamAuthorDao.getAuthorListByPitel(samAuthor);
		return new GridResult<SamAuthor>(list, list.size());
	}

	@Override
	public GridResult saveSamAuthor(SamAuthor samAuthor) {
		SamAuthor sa = iSamAuthorDao.getSamAuthorByPitel2Uitel(samAuthor);
		GridResult gridResult = new GridResult();
		if (sa != null) {
			if ("N".equals(sa.getActive())) {
				sa.setBackName(samAuthor.getBackName());
				sa.setActive("Y");
				try {
					iSamAuthorDao.modifySamAuthorActive(sa);
					gridResult.setSuccess(true);
					return gridResult;
				} catch (Exception e) {
					gridResult.setMsg("对不起,系统异常");
					log.debug("对不起,系统异常");
					gridResult.setSuccess(false);
					return gridResult;
				}

			}
			gridResult.setMsg("对不起,该设备与iTel号以存在相关绑定");
			log.debug("对不起,该设备与iTel号以存在相关绑定");
			gridResult.setSuccess(false);
		} else {
			try {
				samAuthor.setActive("Y");
				samAuthor.setUid(UUID.randomUUID().toString());
				iSamAuthorDao.saveSamAuthor(samAuthor);
				gridResult.setSuccess(true);
				return gridResult;
			} catch (Exception e) {
				gridResult.setMsg("对不起,系统异常");
				log.debug("对不起,系统异常");
				gridResult.setSuccess(false);
				return gridResult;
			}
		}
		return gridResult;
	}

	@Override
	public GridResult updateSamAuthor(SamAuthor samAuthor) {
		GridResult gridResult = new GridResult();
		try {
			iSamAuthorDao.updateSamAuthor(samAuthor);
			gridResult.setSuccess(true);
		} catch (Exception e) {
			gridResult.setMsg("对不起,系统异常");
			gridResult.setSuccess(false);
		}
		return gridResult;
	}

	@Override
	public GridResult deleteSamAuthor(SamAuthor samAuthor) {
		GridResult gridResult = new GridResult();
		try {
			iSamAuthorDao.deleteSamAuthor(samAuthor);
			gridResult.setSuccess(true);
		} catch (Exception e) {
			gridResult.setMsg("对不起,系统异常");
			gridResult.setSuccess(false);
		}
		return gridResult;
	}
}
